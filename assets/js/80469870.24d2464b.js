"use strict";(self.webpackChunkvkuhlmann_www=self.webpackChunkvkuhlmann_www||[]).push([[4390],{1868:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return d},default:function(){return c}});var a=t(7462),i=t(3366),o=(t(7294),t(3905)),r=["components"],s={sidebar_position:2},l="Shortcuts",p={unversionedId:"configuration/shortcuts",id:"configuration/shortcuts",isDocsHomePage:!1,title:"Shortcuts",description:"Prerequisites",source:"@site/latex/configuration/shortcuts.md",sourceDirName:"configuration",slug:"/configuration/shortcuts",permalink:"/latex/configuration/shortcuts",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Installation",permalink:"/latex/configuration/installation"},next:{title:"Always: Back-up!",permalink:"/latex/configuration/backup"}},d=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Compile on F5",id:"compile-on-f5",children:[]},{value:"Create environment",id:"create-environment",children:[]},{value:"Math inline",id:"math-inline",children:[]},{value:"Creating more shortcuts",id:"creating-more-shortcuts",children:[]},{value:"Other optimizations",id:"other-optimizations",children:[]}],m={toc:d};function c(e){var n=e.components,t=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"shortcuts"},"Shortcuts"),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"This section assumes a setup with Visual Studio Code. Where you have installed\nthe following extension:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext"},"Name: LaTeX Workshop\nId: james-yu.latex-workshop\nDescription: Boost LaTeX typesetting efficiency with preview, compile, autocomplete, colorize, and more.\nVersion: 8.20.2\nPublisher: James Yu\nVS Marketplace Link: https://marketplace.visualstudio.com/items?itemName=James-Yu.latex-workshop\n")),(0,o.kt)("p",null,"To open ",(0,o.kt)("inlineCode",{parentName:"p"},"settings.json"),", open the Command Palette (",(0,o.kt)("inlineCode",{parentName:"p"},"Ctrl+Shift+P"),"), type\n",(0,o.kt)("inlineCode",{parentName:"p"},"settings.json")," and hit enter. Fragments below should be added to this file.\nKeep care to adhere to the required JSON (or actually JSONC) format, like\nseparating different key-value pairs with a comma:"),(0,o.kt)("p",null,"Wrong:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "theoldsettings": "aaa"\n    "something": "I pasted in"\n}\n')),(0,o.kt)("p",null,"Correct:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "theoldsettings": "aaa",\n    "something": "I pasted in"\n}\n')),(0,o.kt)("p",null,"VS Code uses JSONC which is JSON allowing for comments, but it is also benevolent\nin allowing small mistakes, like superfluous comma's."),(0,o.kt)("h2",{id:"compile-on-f5"},"Compile on F5"),(0,o.kt)("p",null,"By default the ",(0,o.kt)("inlineCode",{parentName:"p"},".tex")," file is compiled on every save, but I prefer to turn that\noff and instruct compilation with a shortcut. For this, in the ",(0,o.kt)("inlineCode",{parentName:"p"},"settings.json")," I\nadd"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"latex-workshop.latex.autoBuild.run": "never",\n"latex-workshop.latex.rootFile.useSubFile": true,\n"latex-workshop.latex.rootFile.doNotPrompt": true,\n')),(0,o.kt)("p",null,"The last two lines concern a compilation reference when using ",(0,o.kt)("a",{parentName:"p",href:"/latex/subfiles"},"Subfiles"),"."),(0,o.kt)("p",null,"Then in ",(0,o.kt)("inlineCode",{parentName:"p"},"keybindings.json")," (open in the same way as ",(0,o.kt)("inlineCode",{parentName:"p"},"settings.json"),"), I add"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "key": "F5",\n    "when": "resourceExtname == .tex",\n    "command": "latex-workshop.build"\n},\n{\n    "key": "F7",\n    "when": "resourceExtname == .tex",\n    "command": "latex-workshop.view"\n},\n')),(0,o.kt)("p",null,"With ",(0,o.kt)("inlineCode",{parentName:"p"},"F7")," you now see the result of the last compilation."),(0,o.kt)("h2",{id:"create-environment"},"Create environment"),(0,o.kt)("p",null,"In LaTeX, you often need environments, like an ",(0,o.kt)("inlineCode",{parentName:"p"},"align")," environment. The\nfollowing code allows you to do this quickly, by performing on your\nkeyboard ",(0,o.kt)("inlineCode",{parentName:"p"},"Ctrl+E"),", typing ",(0,o.kt)("inlineCode",{parentName:"p"},"align")," and entering ",(0,o.kt)("inlineCode",{parentName:"p"},"Tab"),", and it places you within the align, ready to\ntype your equation."),(0,o.kt)("p",null,"The LaTeX workshop comes with a ",(0,o.kt)("inlineCode",{parentName:"p"},"wrap-env")," function, which you can bind to F5\nby adding in the ",(0,o.kt)("inlineCode",{parentName:"p"},"keybindings.json")," this code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "key": "Ctrl+E",\n    "when": "resourceExtname == .tex",\n    "command": "latex-workshop.wrap-env"\n},\n')),(0,o.kt)("p",null,"That function creates the environment on a new line however, while I prefer to\ninsert environments at the line my cursor is. To have more control, I use\na snippet instead. In the ",(0,o.kt)("inlineCode",{parentName:"p"},"keybindings.json")," add"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "key": "Ctrl+E",\n    "when": "resourceExtname == .tex",\n    "command": "editor.action.insertSnippet",\n    "args": {\n        "langId": "latex",\n        "name": "CreateEnvironment"\n    }\n},\n')),(0,o.kt)("p",null,"Now open the Command Palette (",(0,o.kt)("inlineCode",{parentName:"p"},"Ctrl+Shift+P"),"), type ",(0,o.kt)("inlineCode",{parentName:"p"},"snippet"),", select\n",(0,o.kt)("inlineCode",{parentName:"p"},"Preferences: Configure User Snippets"),", choose ",(0,o.kt)("inlineCode",{parentName:"p"},"LaTeX"),", and change the file's\ncontents to"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    // Explanation about tab stops by VS Code:\n    // Place your snippets for latex here. Each snippet is defined under a snippet name and has a prefix, body and \n    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\n    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \n    // same ids are connected.\n\n    "CreateEnvironment": {\n        "prefix": "env",\n        "body": [\n            "\\\\begin{${1:align*}}",\n            "    $0",\n            "\\\\end{$1}"\n        ],\n        "description": "Create LaTeX environment"\n    }\n}\n')),(0,o.kt)("h2",{id:"math-inline"},"Math inline"),(0,o.kt)("p",null,"Add to ",(0,o.kt)("inlineCode",{parentName:"p"},"keybindings.json")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "key": "ctrl+shift+m",\n    "when": "resourceExtname == .tex",\n    "command": "editor.action.insertSnippet",\n    "args": {\n        "snippet": "\\\\$ ${1:} \\\\$$0"\n    }\n},\n')),(0,o.kt)("h2",{id:"creating-more-shortcuts"},"Creating more shortcuts"),(0,o.kt)("p",null,"You can use the insertSnippet idea for everything that seems handy to you, for\nexample"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "key": "Ctrl+Alt+D F",\n    "command": "editor.action.insertSnippet",\n    "args": {\n        "snippet": "\\\\frac{$1}{$0}"\n    }\n},\n{\n    "key": "Ctrl+Alt+D E",\n    "command": "editor.action.insertSnippet",\n    "args": {\n        "snippet": "\\\\mathbb{E}[$1]$0"\n    }\n},\n{\n    "key": "Ctrl+Alt+D [",\n    "command": "editor.action.insertSnippet",\n    "args": {\n        "snippet": "\\\\left\\\\{$1\\\\right\\\\\\\\}$0"\n    }\n},\n{\n    "key": "Ctrl+Alt+D Ctrl+G",\n    "command": "editor.action.insertSnippet",\n    "args": {\n        "snippet": "\\\\mathcal{G}$0"\n    }\n},\n{\n    "key": "Ctrl+Alt+D Ctrl+C",\n    "command": "editor.action.insertSnippet",\n    "args": {\n        "snippet": "\\\\mathcal{C}$0"\n    }\n},\n{\n    "key": "Ctrl+Alt+D Shift+C",\n    "command": "editor.action.insertSnippet",\n    "args": {\n        "snippet": "\\\\mathbb{C}$0"\n    }\n},\n{\n    "key": "Ctrl+Alt+D Shift+R",\n    "command": "editor.action.insertSnippet",\n    "args": {\n        "snippet": "\\\\mathbb{R}$0"\n    }\n},\n{\n    "key": "Ctrl+Alt+D Shift+Z",\n    "command": "editor.action.insertSnippet",\n    "args": {\n        "snippet": "\\\\mathbb{Z}$0"\n    }\n},\n{\n    "key": "Ctrl+Alt+D Shift+N",\n    "command": "editor.action.insertSnippet",\n    "args": {\n        "snippet": "\\\\mathbb{N}$0"\n    }\n},\n')),(0,o.kt)("h2",{id:"other-optimizations"},"Other optimizations"),(0,o.kt)("p",null,"People often write their paragraph on one line. While word wrap shows the text\nspread over multiple lines, I prefer to not rely on this technique, and\nspread the text over actual lines. For this, I use the ",(0,o.kt)("inlineCode",{parentName:"p"},"Rewrap")," package.\nI select the text I want to rewrap, and press ",(0,o.kt)("inlineCode",{parentName:"p"},"Alt+Q")," to execute Rewrap's\nfunctionality."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Name: Rewrap\nId: stkb.rewrap\nDescription: Hard word wrapping for comments and other text at a given column.\nVersion: 1.14.0\nPublisher: stkb\nVS Marketplace Link: https://marketplace.visualstudio.com/items?itemName=stkb.rewrap\n")),(0,o.kt)("p",null,"Works well with settings like"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"[tex]": {\n    "editor.rulers": [80, 100],\n    "rewrap.wrappingColumn": 100,\n},\n"[latex]": {\n    "editor.formatOnPaste": false,\n    "editor.suggestSelection": "recentlyUsedByPrefix",\n    "editor.rulers": [80, 100],\n    "rewrap.wrappingColumn": 100,\n},\n"editor.rulers": [80],\n"rewrap.wrappingColumn": 80,\n"rewrap.wholeComment": false,\n')),(0,o.kt)("p",null,"Lastly, in my ",(0,o.kt)("inlineCode",{parentName:"p"},"settings.json"),", I have also made it that ",(0,o.kt)("inlineCode",{parentName:"p"},"Ctrl+Tab")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Ctrl+Shift+Tab"),"\nswitch between VS Code tabs in the order they are shown in. By default they\nswitch between tabs in an order based on how recently you used the tab."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "key": "Ctrl+Tab",\n    "command": "workbench.action.nextEditor"\n},\n{\n    "key": "Ctrl+Shift+Tab",\n    "command": "workbench.action.previousEditor"\n},\n')))}c.isMDXComponent=!0}}]);